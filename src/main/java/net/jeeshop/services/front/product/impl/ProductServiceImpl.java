package net.jeeshop.services.front.product.impl;import java.util.List;import net.jeeshop.core.ServersManager;import net.jeeshop.services.front.product.ProductService;import net.jeeshop.services.front.product.bean.Product;import net.jeeshop.services.front.product.bean.ProductStockInfo;import net.jeeshop.services.front.product.dao.ProductDao;public class ProductServiceImpl extends ServersManager<Product> implements		ProductService {	private ProductDao productDao;	public ProductDao getProductDao() {		return productDao;	}	public void setProductDao(ProductDao productDao) {		this.productDao = productDao;	}	@Override	public void upGoods(String[] ids) {		upOrDown(ids, 1);	}	@Override	public void downGoods(String[] ids) {		upOrDown(ids, 2);	}	/**	 * @param ids	 */	private void upOrDown(String[] ids, int status) {		if (ids == null || ids.length == 0) {			return;		}		for (int i = 0; i < ids.length; i++) {			Product goods = new Product();			goods.setId(ids[i]);			goods.setStatus(status);			productDao.update(goods);		}	}	@Override	public List<Product> search(Product e) {		return productDao.selectList(e);	}	@Override	public List<Product> selectParameterList(String id) {		return productDao.selectParameterList(id);	}	@Override	public List<ProductStockInfo> selectStockList(Product product) {		return productDao.selectStockList(product);	}	@Override	public List<Product> selectListProductHTML(Product product) {		return productDao.selectListProductHTML(product);	}	@Override	public List<Product> selectProductListByIds(Product p) {		return productDao.selectProductListByIds(p);	}	@Override	public List<Product> selectHotSearch(Product p) {		return productDao.selectHotSearch(p);	}	@Override	public List<Product> loadHotProductShowInSuperMenu(Product product) {		return productDao.loadHotProductShowInSuperMenu(product);	}	@Override	public void updateHit(Product p) {		productDao.updateHit(p);	}	@Override	public List<Product> selectPageLeftHotProducts(Product p) {		return productDao.selectPageLeftHotProducts(p);	}	@Override	public List<Product> selectActivityProductList(Product p) {		return productDao.selectActivityProductList(p);	}}